{"version":3,"sources":["database.js","Item_To_Do.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","DB","database","ref","Item_To_Do","onClick","alert","props","value","id","this","className","type","name","Component","App","render_item","state","list","map","item","date","Date","getSeconds","getMinutes","STT","push","on","lst","forEach","val","setState","onChange","ev","target","placeholder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAaEA,IAASC,cAXU,CACjBC,OAAQ,0CACRC,WAAY,iCACZC,YAAa,wCACbC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIjBT,IAASU,YAEF,IAAMC,EAAKX,IAASY,WAAWC,IAAI,cCK7BC,E,4MAjBXC,QAAQ,WACJC,MAAM,EAAKC,MAAMC,MAAMC,K,uDAIvB,OACI,qBAAIJ,QAASK,KAAKL,QAAlB,UACI,sBAAKM,UAAU,aAAf,UACI,wBAAOA,UAAU,mBAAjB,UACI,uBAAOA,UAAU,WAAWC,KAAK,aAChCF,KAAKH,MAAMC,MAAMK,KAFtB,IAE4B,mBAAGF,UAAU,oBAH7C,OAIA,mBAAGA,UAAU,YALjB,W,GARaG,aCqFVC,E,kDAnFb,WAAYR,GAAQ,IAAD,8BACjB,cAAMA,IAoBRS,YAAc,WACZ,GAAI,EAAKC,MAAMC,KACb,OACE,EAAKD,MAAMC,KAAKC,KAAI,SAACC,GACnB,OACE,cAAC,EAAD,CAAYZ,MAAOY,QA1BV,EA+BnBf,QAAU,WACR,IAAMgB,EAAO,IAAIC,KACXF,EAAO,CACXX,GAAIY,EAAKE,aAAeF,EAAKG,aAC7BX,KAAM,EAAKI,MAAMJ,KACjBY,IAAK,GAEPxB,EAAGyB,KAAKN,GAAM,WACZnB,EAAG0B,GAAG,SAAS,SAACnB,GACd,IAAMoB,EAAM,GACZpB,EAAMqB,SAAQ,SAAAT,GACZQ,EAAIF,KAAKN,EAAKU,UAEhB,EAAKC,SAAS,CACZb,KAAMU,WA7CK,EAkDnBI,SAAW,SAACC,GACV,EAAKF,SAAS,CACZlB,KAAMoB,EAAGC,OAAO1B,SAlDlB,EAAKS,MAAQ,CACXC,KAAM,MAHS,E,iEAOG,IAAD,OACnBjB,EAAG0B,GAAG,SAAS,SAACnB,GACd,IAAMoB,EAAM,GACZpB,EAAMqB,SAAQ,SAAAT,GACZQ,EAAIF,KAAKN,EAAKU,UAEhB,EAAKC,SAAS,CACZb,KAAMU,S,+BA0CV,OACE,qBAAKjB,UAAU,8BAA8BF,GAAG,eAAhD,SACE,qBAAKE,UAAU,UAAf,SACE,qBAAKA,UAAU,8CAAf,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,aAAd,+BACA,sBAAKA,UAAU,mBAAf,UACE,uBAAOqB,SAAUtB,KAAKsB,SAAUpB,KAAK,OAAOD,UAAU,+BAA+BwB,YAAY,kCACjG,wBAAQ9B,QAASK,KAAKL,QAASM,UAAU,yDAAzC,iBAFF,OAGA,qBAAKA,UAAU,eAAf,SACE,oBAAIA,UAAU,uCAAd,SACGD,KAAKM,mC,GAtEVF,aCSHsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.94f03896.chunk.js","sourcesContent":["import firebase from 'firebase'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyANb7o6eGCuOsPb6El07xNEQpkzUTNsBJQ\",\r\n    authDomain: \"listtodo-3bcb4.firebaseapp.com\",\r\n    databaseURL: \"https://listtodo-3bcb4.firebaseio.com\",\r\n    projectId: \"listtodo-3bcb4\",\r\n    storageBucket: \"listtodo-3bcb4.appspot.com\",\r\n    messagingSenderId: \"510472746758\",\r\n    appId: \"1:510472746758:web:7d8542b99251edf5335087\",\r\n    measurementId: \"G-N1RM1WJ1WQ\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.analytics();\r\n\r\n  export const DB = firebase.database().ref('/Cong_Viec');","import React, { Component } from 'react';\r\n\r\nclass Item_To_Do extends Component {\r\n\r\n    onClick=()=>{\r\n        alert(this.props.value.id);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <li onClick={this.onClick}>\r\n                <div className=\"form-check\">\r\n                    <label className=\"form-check-label\">\r\n                        <input className=\"checkbox\" type=\"checkbox\" />\r\n                        {this.props.value.name} <i className=\"input-helper\" /></label> </div>\r\n                <i className=\"remove \" />x\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Item_To_Do;","import React, { Component } from 'react';\nimport { DB } from './database'\nimport Item_To_Do from './Item_To_Do';\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: null\n    }\n  }\n\n  componentWillMount() {\n    DB.on('value', (value) => {\n      const lst = [];\n      value.forEach(item => {\n        lst.push(item.val())\n      })\n      this.setState({\n        list: lst\n      })\n    })\n\n\n\n  }\n  render_item = () => {\n    if (this.state.list)\n      return (\n        this.state.list.map((item) => {\n          return (\n            <Item_To_Do value={item}></Item_To_Do>\n          )\n        })\n      )\n  }\n  onClick = () => {\n    const date = new Date;\n    const item = {\n      id: date.getSeconds() + date.getMinutes(),\n      name: this.state.name,\n      STT: 1\n    }\n    DB.push(item, () => {\n      DB.on('value', (value) => {\n        const lst = [];\n        value.forEach(item => {\n          lst.push(item.val())\n        })\n        this.setState({\n          list: lst\n        })\n      })\n    });\n  }\n  onChange = (ev) => {\n    this.setState({\n      name: ev.target.value\n    })\n  }\n  render() {\n    return (\n      <div className=\"page-content page-container\" id=\"page-content\">\n        <div className=\"padding\">\n          <div className=\"row container d-flex justify-content-center\">\n            <div className=\"col-md-12\">\n              <div className=\"card px-3\">\n                <div className=\"card-body\">\n                  <h4 className=\"card-title\">Awesome Todo list</h4>\n                  <div className=\"add-items d-flex\">\n                    <input onChange={this.onChange} type=\"text\" className=\"form-control todo-list-input\" placeholder=\"What do you need to do today?\" />\n                    <button onClick={this.onClick} className=\"add btn btn-primary font-weight-bold todo-list-add-btn\">Add</button> </div>\n                  <div className=\"list-wrapper\">\n                    <ul className=\"d-flex flex-column-reverse todo-list\">\n                      {this.render_item()}\n\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}